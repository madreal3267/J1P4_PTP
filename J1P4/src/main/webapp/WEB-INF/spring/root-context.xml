<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 프로젝트의 전반적인 설정 파일 (웹 설정을 제외한 나머지)-->	
	
	<!-- DataSource 디비연결정보 객체 -->
<!-- 	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
		<!-- 원본설정
	 	<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/springdb"/> 
		-->
<!-- 	<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/> -->
<!-- 		<property name="url" value="jdbc:log4jdbc:mysql://localhost:3306/c7d2402t1"/> -->
		
<!-- 		<property name="username" value="c7d2402t1"/> -->
<!-- 		<property name="password" value="1234"/> -->
<!-- 	</bean>  -->
	<!-- DataSource 디비연결정보 객체 -->
	
	<!-- DataSource 디비연결정보 객체(CP) -->
	<bean id="hikariConfig"
		  class="com.zaxxer.hikari.HikariConfig">
		  <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
		  <property name="jdbcUrl" value="jdbc:log4jdbc:mysql://itwillbs.com:3306/c7d2402t1"/>
		  <property name="username" value="c7d2402t1"/>
		  <property name="password" value="1234"/>
	</bean>
	
	<bean id="dataSource"
		  class="com.zaxxer.hikari.HikariDataSource"
		  destroy-method="close">
		  <constructor-arg ref="hikariConfig" />
	</bean>
	<!-- DataSource 디비연결정보 객체(CP) -->
	
	<!-- SqlSessionFactory - 디비연결, sql 처리, mybatis 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:/mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml"/>
	</bean>	
	<!-- SqlSessionFactory - 디비연결, sql 처리, mybatis 설정 -->
	
	<!-- SqlSession - 디비연결(자동), sql 처리, mybatis 설정, 자원해제 -->	
	<bean id="sqlSession" 
		  class="org.mybatis.spring.SqlSessionTemplate"
		  destroy-method="clearCache">
		  
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		
	</bean>
	<!-- SqlSession - 디비연결(자동), sql 처리, mybatis 설정, 자원해제 -->	
	
	<!-- DAO 객체 인식 -->
	<context:component-scan base-package="com.itwillbs.persistence"></context:component-scan>
	
	<!-- Service 객체 인식 -->
	<context:component-scan base-package="com.itwillbs.service"></context:component-scan>
	
	<context:component-scan base-package="com.itwillbs.util"></context:component-scan>
	<!-- Property Placeholder Configuration -->
    <context:property-placeholder location="classpath:application.properties"/>			
	
	<!-- naver mail설정 -->
<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
 <property name="host" value="smtp.naver.com"/> 
 <property name="port" value="465"/> 
 <property name="username" value="itwil_j1p4@naver.com"/> 
 <property name="password" value="itwill1234"/> 
   <!-- 보안연결 SSL과 관련된 설정 -->
 <property name="javaMailProperties">
  <props>
  <prop key="mail.smtp.auth">true</prop>
  <prop key="mail.smtp.starttls.enable">true</prop>
  <prop key="mail.smtps.checkserveridentity">true</prop>
  <prop key="mail.smtps.ssl.trust">*</prop>
  <prop key="mail.debug">true</prop>
  <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
  </props>
 </property>
</bean>

	
		
</beans>
